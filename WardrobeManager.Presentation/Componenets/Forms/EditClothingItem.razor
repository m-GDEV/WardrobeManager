@namespace WardrobeManager.Presentation.Components

@using WardrobeManager.Shared.Models;
@using WardrobeManager.Shared.Enums;
@using WardrobeManager.Presentation.Services.Implementation;
@using WardrobeManager.Presentation.Services.Interfaces;
@using WardrobeManager.Shared.Services.Implementation;
@using WardrobeManager.Shared.Services.Interfaces;

@inject IApiService ApiService;
@inject ISharedService SharedService;

<p>penis 2</p>

@code {
    @* [Parameter] *@
    @* public ServerClothingItem ClothingItem { get; set; } // idk why theres a CS8618 *@

    NewOrEditedClothingItemDTO? editedClothingItem { get; set; }
    MemoryStream? img = null;

    public bool IsOpen { get; set; } = false;
    string message = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        editedClothingItem = SharedService.CreateDefaultNewOrEditedClothingItemDTO();;
    }

    async Task UploadImage(InputFileChangeEventArgs e)
    {
        img = new MemoryStream();
        // max file size of 5 mebibytes
        await e.File.OpenReadStream(maxAllowedSize: 1024 * 5000).CopyToAsync(img);

        editedClothingItem.ImageBase64 = Convert.ToBase64String(img.ToArray());

        if (editedClothingItem.ImageBase64 == string.Empty)
        {
            message = "Image size too large, try again.";
        }
    }

    async Task FormSubmitted()
    {
        // do stuff with api
        await ApiService.Update(editedClothingItem);
        @* await RefreshHandler.InvokeAsync(); *@
        IsOpen = false;
    }
}
