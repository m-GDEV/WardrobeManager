@namespace WardrobeManager.Presentation.Components.FormItems

@using WardrobeManager.Shared.Models;
@using WardrobeManager.Shared.Enums;
@using WardrobeManager.Presentation.Services.Implementation;
@using WardrobeManager.Presentation.Services.Interfaces;

@using WardrobeManager.Shared.Services.Implementation;
@using WardrobeManager.Shared.Services.Interfaces;

<div class="w-3/4 flex flex-row items-center justify-end text-sm gap-2">
    <InputDate TValue="DateTime?" @bind-Value="FromDateInternal" class=" p-1  rounded bg-primary text-primary-content" />
    <p>To</p>
    <InputDate TValue="DateTime?" @bind-Value="ToDateInternal" class=" p-1  rounded bg-primary text-primary-content" />
</div>

@code {
    [Parameter]
    public DateTime? FromDate { get; set; }

    [Parameter]
    public EventCallback<DateTime?> FromDateChanged { get; set; }

    [Parameter]
    public DateTime? ToDate { get; set; }

    [Parameter]
    public EventCallback<DateTime?> ToDateChanged { get; set; }

    private DateTime? FromDateInternal
    {
        get => FromDate;
        set
        {
            if (FromDate != value)
            {
                FromDate = value;
                FromDateChanged.InvokeAsync(value); // Notify the parent of the change
            }
        }
    }

    private DateTime? ToDateInternal
    {
        get => ToDate;
        set
        {
            if (ToDate != value)
            {
                ToDate = value;
                ToDateChanged.InvokeAsync(value); // Notify the parent of the change
            }
        }
    }
}
