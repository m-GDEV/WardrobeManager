@namespace WardrobeManager.Presentation.Components.FormItems

@using WardrobeManager.Shared.Models;
@using WardrobeManager.Shared.Enums;
@using WardrobeManager.Presentation.Services.Implementation;
@using WardrobeManager.Presentation.Services.Interfaces;

@using WardrobeManager.Shared.Services.Implementation;
@using WardrobeManager.Shared.Services.Interfaces;


@* This does not work right now. I can't figure out how to use a generic enum type *@
@typeparam TEnum where TEnum : Enum

<InputSelect @bind-Value="SelectedValue" class="select rounded-md bg-primary text-primary-content" >
    @foreach (var value in Enum.GetValues(typeof(TEnum)).Cast<TEnum>())
    {
    <option value="@value">@value</option>
    }
</InputSelect>

    @code {
        [Parameter]
        public TEnum SelectedValue { get; set; }

        [Parameter]
        public EventCallback<TEnum> SelectedValueChanged { get; set; }

        // For two-way binding
        private TEnum selectedValueInternal;
        private TEnum SelectedValueInternal
        {
            get => selectedValueInternal;
            set
            {
                if (!EqualityComparer<TEnum>.Default.Equals(selectedValueInternal, value))
                {
                    selectedValueInternal = value;
                    SelectedValueChanged.InvokeAsync(selectedValueInternal);
                }
            }
        }
    }
