@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@using WardrobeManager.Presentation.Components.Global
@using WardrobeManager.Presentation.Services.Interfaces;
@using WardrobeManager.Presentation.Services.Implementation;
@inject INotificationService _notificationService;

<div class="h-full  text-base-content flex flex-col body-text transition-all duration-300">
    <NavMenu />

    <ErrorBoundary @ref="errorBoundary">
        <ChildContent>
            <main class="flex flex-grow h-full ">
                @Body
            </main>
            <Footer />
        </ChildContent>
        <ErrorContent Context="ex">
            @{
                _notificationService.AddNotification(ex.Message, NotificationType.Error);
            }
        </ErrorContent>
    </ErrorBoundary>

</div>
<Notifications />


@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender) // Only run on the initial render
        {
            // Manually call theme-change js functions cus it tries to do it on page load and that
            // doesn't jive with the blazor wasm system
            await JSRuntime.InvokeVoidAsync("themeSelect");
            await JSRuntime.InvokeVoidAsync("themeBtn");
            await JSRuntime.InvokeVoidAsync("themeToggle");
            await JSRuntime.InvokeVoidAsync("console.log", "theme-changel loaded");
        }
    }

    private ErrorBoundary? errorBoundary;

    protected override void OnParametersSet()
    {
        errorBoundary?.Recover();
    }
}
