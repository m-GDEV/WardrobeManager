@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@inject INotificationService _notificationService

<div class="h-full  text-base-content body-text transition-all duration-300">
    <ErrorBoundary @ref="errorBoundary">
        <ChildContent>
            
            <div class="hidden sm:block h-full">
                <div class="h-[10%]">
                    <NavMenu/>
                </div>
                <div class="h-[90%]">
                    @Body
                </div>
            </div>
            <div class="sm:hidden flex flex-col items-center justify-center h-full">
                <h1 class="heading-text text-primary">Mobile Version In Development!</h1>
                <p class="subtitle-text text-accent">Please check back later</p>
            </div>
            
        </ChildContent>
        <ErrorContent Context="ex">
            @{
                _notificationService.AddNotification(ex.Message, NotificationType.Error);
            }
        </ErrorContent>
    </ErrorBoundary>
</div>
<Notifications/>

@code {
    private ErrorBoundary? errorBoundary;
    
    
    // This runs every time any page is (fully) reloaded (in the browser)
    protected override async Task OnInitializedAsync()
    {
        var res = await _apiService.DoesAdminUserExist();
        if (res is false)
        {
            _navManager.NavigateTo("/onboarding");
        }
        
        await base.OnInitializedAsync();
    }

    protected override void OnParametersSet()
    {
        errorBoundary?.Recover();
    }

}