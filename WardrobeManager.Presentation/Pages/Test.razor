@inject ILogger<Test> _logger
@inject IConfiguration _config

@page "/test"
@using Microsoft.Extensions.Configuration
@using Microsoft.Extensions.Logging

<div class="grow p-4  bg-purple-500 overflow-hidden flex flex-col">
    <h1 class=" heading-text h-2/5 " >
        dcool stufdff!
    </h1>
    <p class="text-[10rem] text-red-500">test: @f</p>
    <div class="grow flex  flex-row items-center justify-between border border-white ">
        <div class="basis-1/2 border-green-500 border bg-red-500 h-full"></div>
        <div class="basis-full border-green-500 border bg-green-900 h-full flex flex-row items-center ">
            <ul class="basis-full max-h-[50%] overflow-scroll border">
                <li class="h-[4rem] border">list item</li>
                <li class="h-[4rem] border">list item</li>
                <li class="h-[4rem] border">list item</li>
                <li class="h-[4rem] border">list item</li>
                <li class="h-[4rem] border">list item</li>
                <li class="h-[4rem] border">list item</li>
                <li class="h-[4rem] border">list item</li>
                <li class="h-[4rem] border">list item</li>
                <li class="h-[4rem] border">list item</li>
                <li class="h-[4rem] border">list item</li>
                <li class="h-[4rem] border">list item</li>
            </ul>
        </div>
        <div class="basis-1/2 border-green-500 border bg-blue-500 h-full">fasd</div>
    </div>
</div>
@* <div class="grow bg-black m-24 text-red-500 border">
    <p class="text-xl">lots of text</p>
    <p class="text-xl">lots of text</p>
    <p class="text-xl">lots of text</p>
    <p class="text-xl">lots of text</p>
    <p class="text-xl">lots of text</p>
    <p class="text-xl">lots of text</p>
    <p class="text-xl">lots of text</p>
    <p class="text-xl">lots of text</p>
</div>
 *@

@code {
    string f = string.Empty;
    
    protected override void OnInitialized()
    {
        f = $"{_config["BackendUrl"] ?? "terrifier 3 was a great movie"}";
        _logger.LogCritical(f);        
        Console.WriteLine(f);
        StateHasChanged();
         
        base.OnInitialized();
    }

}
